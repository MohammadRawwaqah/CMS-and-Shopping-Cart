@model CmsShoppingCart.Models.ViewModels.Pages.Shop.ProductVM

@{
    ViewBag.Title = "Edit Product";
}

<h2>Edit Product</h2>

<div>
    @Html.ActionLink("Back to List", "Products")
</div>

<style>
    input#ImageName {
        display: none;
    }
</style>

@if (TempData["SM"] != null)
{
    <div class="alert alert-success">
        @TempData["SM"]
    </div>
}


@using (Html.BeginForm("EditProduct", "Shop", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CategoryId, Model.Categories, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageName, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.ImageName, new { htmlAttributes = new { @class = "form-control" } })
            <div class="col-md-10">
                <img src="/Images/Uploads/Products/@Model.Id/Thumbs/@Model.ImageName" />
                <br /><br />
                <img id="imgpreview" src="#" />
                <br /><br />
                <div class="col-md-10">
                    <input type="file" name="file" id="ImageUpload" />
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Edit Products" class="btn btn-default" />
            </div>
        </div>
    </div>
}
@*****dropzone**************************************************************************************************************@

<hr />

@if (!Model.GalleryImages.Any())
{
    <h3>There are no gallery images for this product</h3>
}
<form action="/admin/shop/SaveGalleryImages" method="post" enctype="multipart/form-data" class="dropzone" id="dropzoneForm">
    <div class="fallback">
        <input type="file" name="file" multiple />
        <input type="submit" value="Upload" />
    </div>
</form>


@foreach (var image in Model.GalleryImages)//This code take all images inside galary/thumbs to preview it on page.
{
    <div style="display:inline-block">
        <img src="/Images/Uploads/Products/@Model.Id/Gallery/Thumbs/@image" />
        @Html.ActionLink("delete", "DeleteImage", "shop", new { @class = "deleteimage", data_name = image })
    </div>
}

<link href="~/Scripts/dropzone/basic.css" rel="stylesheet" />
<link href="~/Scripts/dropzone/dropzone.css" rel="stylesheet" />


@*****dropzone**************************************************************************************************************@
@section Scripts{
    <script src="~/Scripts/dropzone/dropzone.js"></script>
    <script>

        $(function () {

            //Preview selected Image

            function ReadURL(input) {

                if (input.files && input.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        $("img#imgpreview")
                            .attr("src", e.target.result)
                            .width(200)
                            .height(200);
                    }

                    reader.readAsDataURL(input.files[0]);
                }

            }

            $("#ImageUpload").change(function () {
                ReadURL(this);

            });

            //dropzone js


            Dropzone.options.dropzoneForm = {
                acceptedFiles: ".png,.jpg,.gif,.bmp,.jpeg",
                init: function () {
                    //this code will be run after the form finished, and the method we goes to finished too,
                    // so this code will be run ! why ! just to refrish the page to show image in bottom of page.
                    this.on("complete", function (file) {
                        if (this.getUploadingFiles().length === 0 && this.getQueuedFiles().length === 0) {
                            location.reload();
                        }
                    });
                    //this code will be run when form send files look to form above ,
                    //and this code will send id to method we goes to. BTW you can send id (i mean arrgument) to method as
                    //query string inside action of form like this:<form action="/admin/shop/SaveGalleryImages?id=@@Model.Id" method="post"
                    //and remove this code.
                    this.on("sending", function (file, xhr, formData) {

                        formData.append("id",@Model.Id);

                    });
                }

            }

        });


        $("a.deleteimage").click(function(e){

            e.preventDefault();

            if(!confirm("are you sure you want to delete it ?"))
                return false;

            var $this = $(this);
            var name = $this.data("name");
            var url ="/Admin/Shop/DeleteImage"
            $.post(url,{id:@Model.Id,imageName:name},function(data){
                $this.parent().fadeOut("fast");
            });

        });



    </script>
}


